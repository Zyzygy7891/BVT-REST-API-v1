openapi: "3.0.3"
info:
  title: Budavár Tours szervezett utak - OpenAPI 3.0.3

  version: 1.1.0
externalDocs:
  description: Budavár Tours REST API leírás
  url: "https://docs.google.com/document/d/1QVYspyE4H4nVdV2geGMEK2JXC4KMswbgdjZiMhSNvAw/edit#heading=h.mwt5c55cq5n2"
servers:
  - url: "https://teszt.budavartours.hu/api/v1"
tags:
  - name: "törzsadatok"
    description: "Az utazási programok felépítéséhez nélülözhetetlen alapadatok"
  # - name: "utazási programok"
  #   description: "Az egyes utazási programokat összefogó objektum"
  # - name: "árak"
  #   description: "Az egyes utazási programokhoz tartozó árak, kedvezményes árak"
  # - name: "felhasználók"
  #   description: "A felhasználóra vonatkozó statisztikák és műveletek"
  # - name: "hitelesítések"
  #   description: "A felhasználó hitelesítését kezelő hívások"
  # - name: "esemény vezérelt szolgáltatások"
paths:
  /users:
    get:
      tags:
        - felhasználó
      summary: Az aktuális felhasználóra vonatkozó statisztikákat adja vissza
      description: |-
        Az aktuálisan bejelentkezett felhasználóra vonatkozó adoatok és statisztikák  

        **Adatok**  
          - felhasználó név
          - kapcsolattartó email cím
          - teljes név
          - utolsó belépés időpontja
          - felhasználó rate limit

        **Statisztikák**
          - utolsó 24 óra belépési kisérletek száma
          - utolsó 24 óra sikeres belépéseinek száma
          - utolsó 24 óra sikertelen belépéseinek száma
          - utolsó 24 óra sikeres kéréseinek száma
          - utolsó 24 óra hibás kéréseinek száma
          - utolsó 24 óra sikeres szever válaszainak száma
          - utolsó 24 óra hibás szever válaszainak száma
          - utolsó 24 óra átlagos válaszideje
      responses:
        "200":
          description: Sikeres belépés
  # /users/login:
  #   post:
  #     tags:
  #       - felhasználó
  #       - hitelesítés
  #     summary: A felhasználó bejelentkezési kérése
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               username:
  #                 type: string
  #                 maxLength: 128
  #               password:
  #                 type: string
  #                 maxLength: 256
  #                 format: password
  #             required:
  #               - username
  #               - password
  #     responses:
  #       '200':
  #         description: Sikeres belépés
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 token:
  #                   type: string
  #                   description: Hitelesítési token
  #       '401':
  #         description: "A hitelesítés nem sikerült: hibás a felhasználó vagy a jelszó"
  # /users/logout:
  #   delete:
  #     tags:
  #       - felhasználó
  #       - hitelesítés
  #     summary: A hitelesítési token érvénytelenítése (kilépés)
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres kilépés
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  # /users/subscribes:
  #   get:
  #     tags:
  #       - felhasználó
  #       - "esemény vezérelt szolgáltatás"
  #     summary: Lista, amely a felhasználó által feliratkozott, aktív szervereseményeket tartalmazza
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Lista generálás
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               item:
  #                 type: object
  #                 properties:
  #                   "#":
  #                     type: integer
  #                     format: int32
  #                     example: 1
  #                   "name":
  #                     type: string
  #                     example: "Teljes frissítés: javasolt"
  #                   "callbackURI":
  #                     type: string
  #                     format: uri
  #                     example: "https://api.kulsoszerver.hu/v1/teljes-frissites-inditasa"
  #                   "subscribeDate":
  #                     type: string
  #                     format: date
  #                     example: 2023-01-01
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils:
  #   get:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     summary: Lista
  #     description: |-
  #       A szerveren, bejelentkezett felhasználók számára elérhető eszközök listája az adatok egyszerűbb átadására.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lista generálás
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               item:
  #                 type: object
  #                 properties:
  #                   "#":
  #                     type: integer
  #                     format: int32
  #                   "requestPath":
  #                     type: string
  #                   "requestParameters":
  #                     type: string
  #                   "description":
  #                     type: string
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils/status:
  #   get:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     summary: A szerver aktuális statisztikái
  #     description: |-
  #       A szerver utolsó 1 órájának az átlag mutatói:
  #       - válaszidő
  #       - terheltség %-ban
  #       - javasolt teljes adatlekérés?
  #       - javasolt objektumok lekérése?
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres generálás
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               item:
  #                 minItems: 4
  #                 maxItems: 4
  #                 type: object
  #                 properties:
  #                   "#":
  #                     type: integer
  #                     format: int32
  #                     example: 1
  #                   "measurement":
  #                     type: string
  #                     example: "Is full update recommended?"
  #                   "quantity":
  #                     oneOf:
  #                     - type: number
  #                       format: float
  #                       example: 284.65
  #                     - type: string
  #                       description: Szabadszavas szöveg
  #                       example: "Ft/kWh"
  #                     - type: string
  #                       enum: ["recommended", "not recommended"]
  #                       description: A szerver terheltségétől függő információk eredménye
  #                       example: "recommended"
  #                   "unit":
  #                     type: string
  #                     example: "-"
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils/status/requests/:
  #   get:
  #     tags:
  #     - eszközök
  #     summary: Segédútvonal a REST API szabványos struktúrájához.
  #     responses:
  #       '204':
  #         description: Nincs tartalom

  # /utils/status/requests/{requestID}:
  #   get:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     summary: A szervernek küldött kérés státusza
  #     description: |-
  #       A felhasználó ellenőrizheti az egyes kéréseinek a státuszát, amennyiben az túl hosszú ideig elhúzódik.
  #       **Az egyes státuszok:**
  #         - **unknown**: a kérés az adott azonosítóval nem létezik vagy idő közben befejeződött
  #         - **in queue**: a kérés sorban áll a futtatáshoz
  #         - **in progress**: a kérést az adatbázis szerver épp feldolgozza
  #         - **response in progress**: a válasz átadása folyamatban van
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: requestID
  #         schema:
  #           type: string
  #           format: urid
  #           example: AAAA-BBBB-CCCC-DDDD-EEEE
  #         required: true
  #         description: Kérés azonosító
  #     responses:
  #       '200':
  #         description: Sikeres státusz lekérés
  #         content:
  #           application/json:
  #             schema:
  #               type: string
  #               enum: ["unknown","in queue","in progress","response in progress"]
  #               description: |-
  #                 Az egyes státuszok:
  #                   - "unknown": a kérés az adott azonosítóval nem létezik vagy idő közben befejeződött
  #                   - "in queue": a kérés sorban áll a futtatáshoz
  #                   - "in progress": a kérést az adatbázis szerver épp feldolgozza
  #                   - "response in progress": a válasz átadása folyamatban van
  #               example: "in queue"

  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils/subscribes:
  #   get:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "esemény kezelés"
  #     summary: A szervereseményeket kezelő hívások
  #     description: |-
  #       A felhasználó feliratkozhat bizonyos szerver eseményekre. Az események megtörténtekor a Budavár Tours API szerver meghívja a felhasználó által megadott URI-t.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: query
  #         name: offset
  #         schema:
  #           type: integer
  #         description: A lista oldalszámát megadó paraméter
  #       - in: query
  #         name: limit
  #         schema:
  #           type: integer
  #         description: A lista oldalain lévő elemek számát megadó paraméter. Max. 30
  #     responses:
  #       '200':
  #         description: A felhasználó számára elérhető szerveresemények listája
  #         headers:
  #           x-next:
  #             description: A lista következő N elemét tartlamazó hivatkozás
  #             schema:
  #               type: string
  #               example: "https://api.budavartours.hu/api/v1/utils/subscribe?offset=1&limit=30"
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 0
  #               maxItems: 50
  #               default: 30
  #               items:
  #                 type: object
  #                 properties:
  #                   "eventID":
  #                     type: integer
  #                     format: int64
  #                     example: 111275843
  #                   "eventName":
  #                     type: string
  #                     enum: ["onFullUpdateRecommended","onParitalUpdateRecommended"]
  #                     example: "onFullUpdateRecommended"
  #                   "description":
  #                     type: string
  #                     example: "If server load drops below 20%"
  #                   "isAlreadySubscribed":
  #                     type: boolean
  #                   "callbackURI":
  #                     oneOf:
  #                       - type: string
  #                         format: uri
  #                         example: "https://api.example.com/v1/BUDAVARTOURS/startFullUpdate"
  #                       - type: string
  #                         enum: ["null"]
  #                   "subscribeDate":
  #                     type: string
  #                     format: date
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils/subscribes/{eventID}:
  #   post:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "szerveresemény kezelés"
  #     summary: A szervereseményre feliratkozás
  #     description: |-
  #       A felhasználó feliratkozhat bizonyos szerver eseményekre. Az események megtörténtekor a Budavár Tours API szerver meghívja a felhasználó által megadott URI-t.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: eventID
  #         schema:
  #           type: integer
  #           format: int64
  #         required: true
  #         description: A szerveresemény egyedi azonosítója
  #     requestBody:
  #       description: Optional description in *Markdown*
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               callbackURI:
  #                 type: string
  #                 format: uri
  #     responses:
  #       '201':
  #         description: A felhasználó feliratkozása sikeresen megtörtént
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 name:
  #                   type: string
  #                 eventID:
  #                   type: integer
  #                   format: int64
  #                 callbackURI:
  #                   type: string
  #                   format: uri
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  #   put:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "szerveresemény kezelés"
  #     summary: A szerveresemény feliratkozás frissítése
  #     description: |-
  #       A felhasználó feliratkozhat bizonyos szerver eseményekre. Az események megtörténtekor a Budavár Tours API szerver meghívja a felhasználó által megadott URI-t.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: eventID
  #         schema:
  #           type: integer
  #           format: int64
  #         required: true
  #         description: A szerveresemény egyedi azonosítója
  #     requestBody:
  #       description: Optional description in *Markdown*
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               callbackURI:
  #                 type: string
  #                 format: uri
  #     responses:
  #       '201':
  #         description: A felhasználó feliratkozásának frissítése sikeresen megtörtént
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 name:
  #                   type: string
  #                 eventID:
  #                   type: integer
  #                   format: int64
  #                 callbackURI:
  #                   type: string
  #                   format: uri
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  #   delete:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "szerveresemény kezelés"
  #     summary: A szerveresemény feliratkozás frissítése
  #     description: |-
  #       A felhasználó feliratkozhat bizonyos szerver eseményekre. Az események megtörténtekor a Budavár Tours API szerver meghívja a felhasználó által megadott URI-t.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: eventID
  #         schema:
  #           type: integer
  #           format: int64
  #         required: true
  #         description: A szerveresemény egyedi azonosítója
  #     requestBody:
  #       description: Optional description in *Markdown*
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               callbackURI:
  #                 type: string
  #                 format: uri
  #     responses:
  #       '204':
  #         description: A felhasználó feliratkozásának törlése sikeresen megtörtént
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /utils/priorityTimeWindows/{timeWindowID}:
  #   get:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "magas prioritású szerver rendelkezésre állás"
  #     summary: A szerver szabad beosztásásának lekérdezése
  #     description: |-
  #       A felhasználónak lehetősége van *magas prioritású időablakot* igényelni. A megadott időablakban a felhasználó által küldött kérések magas prioritásban hajtódnak végre.
  #       A hívás a 'magas prioritású időpontok' rejndjét adja vissza.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: A 'magas prioritású időpontok' rendje
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minitems: 1
  #               items:
  #                 type: object
  #                 properties:
  #                   startTime:
  #                     type: string
  #                     format: date-time
  #                     description: Az időablak kezdete
  #                   startEnd:
  #                     type: string
  #                     format: date-time
  #                     description: Az időablak vége, alapértelmezetten 10 perc időtartamú az ablak
  #                   isReserved:
  #                     type: boolean
  #                     description: |-
  #                       Az időablak foglalható vagy sem?
  #                       true = foglalható
  #                       false = nem foglalható
  #                   timeWindowID:
  #                     type: integer
  #                     format: int64
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  #   post:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "magas prioritású szerver rendelkezésre állás"
  #     summary: Egy 'magas prioritású időpont' lefoglalása a felhasználó számára
  #     description: |-
  #       A felhasználónak lehetősége van 'magas prioritású időablakot' igényelni. A megadott időablakban a felhasználó által küldött kérések magas prioritásban hajtódnak végre.
  #       A hívás segítségével egy időablakot lehet lefoglalni.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: timeWindowID
  #         schema:
  #           type: integer
  #           format: int64
  #         required: true
  #         description: Az időablak egyedi azonosítója
  #     responses:
  #       '200':
  #         description: Az időablak már lefoglalásra került (az aktuális felhasználó által).
  #       '201':
  #         description: Az időablak foglalása sikeresen megtörtént
  #         content:
  #           application/json:
  #             schema:
  #               startTime:
  #                 type: string
  #                 format: date-time
  #                 description: Az időablak kezdete
  #               startEnd:
  #                 type: string
  #                 format: date-time
  #                 description: Az időablak vége, alapértelmezetten 10 perc időtartamú az ablak
  #               isReserved:
  #                 type: boolean
  #                 description: |-
  #                   Az időablak foglalható vagy sem?
  #                   true = foglalható
  #                   false = nem foglalható
  #               timeWindowID:
  #                 type: integer
  #                 format: int64
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  #       '409':
  #         description: Az időablak már foglalt (egy másik felhasználó által).
  #   delete:
  #     tags:
  #     - eszközök
  #     - "esemény vezérelt szolgáltatás"
  #     - "magas prioritású szerver rendelkezésre állás"
  #     summary: Egy, már lefoglalt 'magas prioritású időpont' felszabadítása a foglaltság alól
  #     description: |-
  #       A felhasználónak lehetősége van 'magas prioritású időablakot' igényelni. A megadott időablakban a felhasználó által küldött kérések magas prioritásban hajtódnak végre.
  #       A hívás segítségével egy, korábban lefoglalt időablakot lehet szabaddá tenni. A szabaddá tételét az időablak kezdetéig lehet megtenni, kizárólag a foglalást intéző felhasználó által.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #       - in: path
  #         name: timeWindowID
  #         schema:
  #           type: integer
  #           format: int64
  #         required: true
  #         description: Az időablak egyedi azonosítója
  #     responses:
  #       '200':
  #         description: Az időablak már felszabadításra került (az aktuális felhasználó által).
  #       '201':
  #         description: Az időablak felszabadítása sikeresen megtörtént
  #         content:
  #           application/json:
  #             schema:
  #               startTime:
  #                 type: string
  #                 format: date-time
  #                 description: Az időablak kezdete
  #               startEnd:
  #                 type: string
  #                 format: date-time
  #                 description: Az időablak vége, alapértelmezetten 10 perc időtartamú az ablak
  #               isReserved:
  #                 type: boolean
  #                 description: |-
  #                   Az időablak foglalható vagy sem?
  #                   true = foglalható
  #                   false = nem foglalható
  #               timeWindowID:
  #                 type: integer
  #                 format: int64
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága
  #       '409':
  #         description: Az időablak már foglalt (egy másik felhasználó által).

  # /data/base:
  #   get:
  #     tags:
  #     - törzsadatok
  #     - alapadatok
  #     summary: A különböző típusú törzsadatok teljes listája
  #     description: |-
  #       Az utak teljes felépítéséhez az alapadatok adják a gerincet. Az alapadatok a törzsadatokból (*/data/base* hívás alatti hívások) és a lokációkból (*/data/base/locations* hívás alatti hívások) áll.
  #       **A hívás a teljes törzsadat listát adja vissza.**
  #       Ezt a listát érdemes ritkán frissíteni, mivel a */data/base/descriptions* (az egyes elemek leírását tartalmazó hívás) elemei is szerepelnek benne és tartalmuk nagy méretű is lehet. A lista összes elemének letöltése előtt javasolt a */utils/priorityTimeWindows/* hívás segítségével egy 'magas prioritású időablakot' igényelni, így sokkal kisebb az esélye egy *504 Gateway Timeout* válasznak.

  #       Rendszeres frissítés esetén érdemes a */data/history* hívást használni, ami megadja az utóbbi maximum 48 órában megváltozott objektumok listáját.

  #       Alternatívaként használható a */utils/subscribe* hívás, amely segítségével feliratkozhatunk az *objectUpdated* eseményre. Ez az esemény egy megadott objektum módosulása (frissítés vagy törlés) esetén meghív egy külső URI-t, így a partner szervere valós időben értesül az eseményről.
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: A törzsadatok listája
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minitems: 1
  #               uniqueItems: true
  #               items:
  #                 type: object
  #                 properties:
  #                   self:
  #                     type: string
  #                     format: uri
  #                     example: "#/data/options/stornoPrice"
  #                   type:
  #                     type: string
  #                     enum: ["options", "descriptions", "basicData", "tags"]
  #                   name:
  #                     type: string
  #                     minLength: 3
  #                     maxlength: 128
  #                     example: "Sztornó"
  #                   descriptionID:
  #                     type: string
  #                     format: uri
  #                     example: "#/data/description/stornoPrice"
  #                   value:
  #                     oneOf:
  #                       - type: string
  #                       - type: number
  #                   additionalProperties: {}
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /data/base/options/{baseID*}:
  #   parameters:
  #     - name: baseID
  #       in: path
  #       description: A törzsadat(ok) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A törzsadat(ok) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: "#/components/schemas/serverMessages"
  #                 - $ref: '#/components/schemas/options'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /data/base/descriptions/{baseID*}:
  #   parameters:
  #     - name: baseID
  #       in: path
  #       description: A törzsadat(ok) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A törzsadat(ok) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: "#/components/schemas/serverMessages"
  #                 - $ref: '#/components/schemas/descriptions'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  #                 # oneOf:
  #                 # - $ref: "#/components/schemas/serverMessages"
  #                 # - $ref: '#/components/schemas/options'
  #                 # - $ref: '#/components/schemas/descriptions'
  #                 # - $ref: '#/components/schemas/basicDatas'
  #                 # - $ref: '#/components/schemas/tags'

  # /data/base/basicDatas/{baseID*}:
  #   parameters:
  #     - name: baseID
  #       in: path
  #       description: A törzsadat(ok) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A törzsadat(ok) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/basicDatas'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /data/base/tags/{baseID*}:
  #   parameters:
  #     - name: baseID
  #       in: path
  #       description: A törzsadat(ok) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A törzsadat(ok) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/tags'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /locations/cities/{locationID*}:
  #   parameters:
  #     - name: locationID
  #       in: path
  #       description: A lokáció(k) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A lokáció(k) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/locations'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /locations/regions/{locationID*}:
  #   parameters:
  #     - name: locationID
  #       in: path
  #       description: A lokáció(k) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A lokáció(k) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/locations'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /locations/countries/{locationID*}:
  #   parameters:
  #     - name: locationID
  #       in: path
  #       description: A lokáció(k) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A lokáció(k) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/locations'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /locations/accomodations/{locationID*}:
  #   parameters:
  #     - name: locationID
  #       in: path
  #       description: A lokáció(k) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #   get:
  #     summary: A lokáció(k) listájának lekérése
  #     tags:
  #       - törzsadatok
  #       - alapadatok
  #       - szálláshelyek
  #     parameters:
  #       - in: header
  #         name: Authorization
  #         schema:
  #           type: string
  #         required: true
  #         description: Hitelesítési token
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/accomodations'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /programs/{programID*}:
  #   parameters:
  #     - name: programID
  #       in: path
  #       description: A program(ok) azonosítója
  #       required: true
  #       schema:
  #         type: integer
  #         format: int32
  #         example: 345
  #     - name: Authorization
  #       in: header
  #       schema:
  #         type: string
  #       required: true
  #       description: Hitelesítési token
  #   get:
  #     summary: A program(ok) részleteinek lekérése
  #     tags:
  #       - utazási programok
  #       - árak
  #     responses:
  #       '200':
  #         description: Sikeres lekérdezés
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               minItems: 1
  #               items:
  #                 oneOf:
  #                 - $ref: '#/components/schemas/serverMessages'
  #                 - $ref: '#/components/schemas/progamScheme'
  #       '401':
  #         description: A felhasználónak a híváshoz nincs jogosultsága

  # /programs/{programID*}/prices:
  # /programs/{programID}/prices/{departureID*}:
  # /departures/{departureID*}:

  # /quicklists/locations:
  # /quicklists/accomodations:
  # /quicklists/programs:
  # /quicklists/histories:

  # /history/{objectID*}:

components:
  schemas:
    id:
      type: number
      format: int64
      description: Az objektum azonosítója
      example: 3755

    refId:
      type: string
      format: uri
      description: Az objektumot azonosító REST API hívás, amely NEM tartlamazza a domaint és az api verziót.
      example: "/data/base/basicDatas/3755"

    serverMessage:
      allOf:
        - $ref: "#/components/schemas/id"
        - $ref: "#/components/schemas/refId"
        - type: object
          properties:
            status:
              type: integer
              format: int32
              minimum: 100
              maximum: 999
              description: Szerver üzenethez tartozó HTTP kód
              example: 404
            message:
              type: string
              maxLength: 64
              description: A hibakód rövid magyarázata
              example: "Object not found"
            description:
              type: string
              maxLength: 512
              description: A hibakódhoz tartozó részletes leírás
              example: "The object does not exist. Refresh baseData and try again"

    option:
      allOf:
        - $ref: "#/components/schemas/id"
        - type: object
          properties:
            name:
              type: string
              maxLength: 128
              description: Az obejktum neve
              example: Sztornó
            value:
              description: |
                **Globális beállítás**  
                pl.: Sztornó százalék, HUF-EUR kurzus váltó, stb.
              oneOf:
                - type: string
                  maxLength: 128
                  example: "valami"
                - type: number
                  format: float
                  example: 0.025
                - type: number
                  format: int64
                  example: 6
            type:
              type: string
              enum: [STORNO, CURRENCY_CHANGE]
              description: |-
                A törzsadat típusának a neve.  
                **Globális beállítás**  
                 pl.: Sztornó százalék, HUF-EUR kurzus váltó, stb.
              example: "STORNO"

    description:
      allOf:
        - $ref: "#/components/schemas/id"
        - $ref: "#/components/schemas/refId"
        - type: object
          properties:
            title:
              type: string
              maxLength: 128
              description: "A leírás címe. Ezt nem kell feltétlenül megjeleníteni"
            content:
              type: string
              maxLength: 8192
              description: "Egy objektumhoz tartozó, kiegészítő információkat tartalmazó, HTML előformázott szöveg"
              example: |-
                <p class=""><b class="">1. nap: Budapest-Korfu</b><br>  
                Elutazás Korfura charterjárattal. Érkezés után transzfer a szállodába. Szabadprogram. Vacsora (amennyiben a program tartalmazza) és szállás Korfun. </p>...
            type:
              type: string
              enum:
                [
                  ACCOMODATION,
                  CITY,
                  REGION,
                  COUNTY,
                  OPTIONAL_PROGRAM,
                  PROGRAM_SCHEME,
                  BASE_DATA,
                ]
              description: |-
                A törzsadat típusának a neve.  
                **Leírás törzsadat típus**  
                A 'description' típusú törzsadathoz tartoznia KELL egy 'content' tulajdonság, ami magát a leírást tartalmazza, HMTL előformázott szövegként
                  * `ACCOMODATION` - Szálláshoz tartozó leírás
                  * `CITY` - Város lokációhoz tartozó leírás
                  * `REGION` - Régió lokációhoz tartozó leírás
                  * `COUNTY` - Ország lokációhoz tartozó leírás
                  * `OPTIONAL_PROGRAM` - Fakultatív programhoz tartozó leírás
                  * `PROGRAM_SCHEME` - Programsémához tartozó leírás
                  * `BASE_DATA` - Törzsadathoz tartozó leírás
              example: "CITY"

    basicData:
      allOf:
        - $ref: "#/components/schemas/id"
        - type: object
          properties:
            name:
              type: string
              maxLength: 128
              description: Az obejktum neve
            type:
              type: string
              enum:
                [
                  CATERING,
                  ADDITIONAL_ITEM,
                  PROGRAM_TYPE,
                  ACCOMODATION_RATE,
                  ACCOMODATION_TYPE,
                  ACCOMODATION_SERVICE,
                  TRAVEL_TYPE,
                ]
              example: "ADDITIONAL_ITEM"
              description: |
                A törzsadat típusának a neve.
                # Alap törzsadat típus
                Olyan törzsadatok, amelyek leírással is rendelkeznek
                  * `CATERING` - Ellátás megnevezése és leírása (pl.: önellátás, reggeli, félpanzió)
                  * `ADDITIONAL_ITEM` - Felárak megnevezése és leírása (pl.: Elsőbbségi beszállás; Atlasz Classic Kalkulált biztosítás)
                  * `PROGRAM_TYPE` - Program megnevezése és leírása (pl.: repülőjegy, hajóút, körutazás)
                  * `ACCOMODATION_RATE` - Szállásbesorolás megnevezése és leírása (pl.: 2*+, A kategória, 5*)
                  * `ACCOMODATION_TYPE` - Szállástípus megnevezése és leírása (pl.: apartman, hotel, butikhotel)
                  * `ACCOMODATION_SERVICE` - Szállásszolgáltatás megnevezése és leírása. Ezekbe beletartoznak az szállás szoba- és sportszolgáltatásai is. (pl.: parkoló, medencebár, vasaló)
                  * `TRAVEL_TYPE` - Utazási mód megnevezése és leírása (pl.: autóbusszal, egyénileg)
            descriptionID:
              oneOf:
                - $ref: "#/components/schemas/id"

    tags:
      allOf:
        - $ref: "#/components/schemas/id"
        - type: object
          properties:
            type:
              type: string
              enum: [ROOMNAME, QUANTITYNAME, DISCOUNTTYPE, MEMO]
              example: "ROOMNAME"
              description: |
                A törzsadat típusának a neve.
                # Egyszerű törzsadat típus
                Ezek a törzsadatok nem rendelkeznek a nevükön kívül ('name' tulajdonság) egyéb tulajdonsággal.
                * `ROOMNAME` - Lakóegység neve. Az egyszerűség miatt NEM bontjuk további tulajdonságokra (pl.: fekvés [kerti], kilátás [tengerre néző], szint [szuperior]), hanem egyben adjuk meg.
                * `QUANTITYNAME` - Egy tétel mennyiségjelzője. (pl.: /nap; /fő; /foglalás)
                * `DISCOUNTTYPE` - Egy akció típusa. 
                  Jelenleg 4 akciótípus van a rendszerünkben: 
                    - `AKCIÓS` - nincs az akciónak kiemelt tulajdonsága
                    - `FIRST MINUTE` - előfoglalási akció
                    - `LAST MINUTE` - közeli indulású vagy korlátozott foglalhatóságú utakra adott akció
                    - `NINCS AKCIÓBAN` - "Technikai hack" a katalógus árak időponthoz kötött változtatására. (Pl.: A gyorsan fogyó helyek miatt a referens kéri, hogy 1 hónapig X%-val magasabbak legyenek az árak)  
                * `MEMO` - Felárak esetében van egy "Memo" tulajdonság, ami a 0 forintos tételek esetén az ár helyett jelenik meg.  
                  pl.: "0 ft/foglalás" helyett "Ajándék!"  
                  Az ár számítás továbbra is 0 Ft-tal történik.

    GPSPosition:
      allOf:
        - $ref: "#/components/schemas/id"
        - type: object
          description: GPS koordinátákat reprezentáló objektum
          properties:
            latitude:
              type: number
              format: float
              minimum: -90
              maximum: 90
              nullable: true
              description: A GPS koordináta 'latitude' komponense. Amennyiben null, az objektum `latitude ÉS longitude ÉS zoom` tulajdonsága is érvénytelen és a szülő objektum parentID-jének a _gps-position-data értékeit kell megkapnia, vagy 0
              example: 47.5059676
            longitude:
              type: number
              format: float
              minimum: -180
              maximum: 180
              nullable: true
              description: A GPS koordináta 'longitude' komponense. Amennyiben null, az objektum `latitude ÉS longitude ÉS zoom` tulajdonsága is érvénytelen és a szülő objektum parentID-jének a _gps-position-data értékeit kell megkapnia, vagy 0
              example: 19.0376893
            zoom:
              type: number
              format: float
              minimum: 1
              maximum: 20
              nullable: true
              description: A GPS koordináta 'zoom' vagy magasság komponense. Amennyiben null, az objektum `latitude ÉS longitude ÉS zoom` tulajdonsága is érvénytelen és a szülő objektum parentID-jének a _gps-position-data értékeit kell megkapnia, vagy 1
              example: 14.8

    location:
      allOf:
        - $ref: "#/components/schemas/id"
        - $ref: "#/components/schemas/GPSPosition"
        - type: object
          properties:
            name:
              type: string
              minLength: 3
              maxLength: 128
              description: "A lokáció neve"
            parentId:
              oneOf:
                - $ref: "#/components/schemas/id"
            parentRef:
              type: string
              format: uri
              example: "/data/base/location/9412"
              description: "A szülő törzsadatot azonosító hívás. A fa struktúra létrehozásához. 'country' subtype esetén nem kötelező"
            descriptionIds:
              type: array
              minItems: 1
              items:
                oneOf:
                  - $ref: "#/components/schemas/id"
            descriptionRefs:
              type: array
              minItems: 1
              items:
                oneOf:
                  - $ref: "#/components/schemas/refId"
            type:
              type: string
              enum: [CITY, REGION, COUNTRY]
              example: "REGION"
              description: |
                A törzsadat típusának a neve.
                # Lokáció törzsadat típus
                Olyan törzsadatok, amelyek egy helyszínt jelölnek (pl.: város, ország)
                A törzsadat fa három szintű, így az egyéb szinteket (pl.: POI, városrész) a város alá soroltuk be.
                A lokáció típusa:
                  * `CITY` - város, városrész, látványosság
                  * `REGION` - földrajzi, közigazgatási vagy történelmi régió
                  * `COUNTRY` - független állam, lásd: https://hu.wikipedia.org/wiki/Kontinensek_%C3%A9s_orsz%C3%A1gok_list%C3%A1ja

    accomodations:
      allOf:
        - $ref: "#/components/schemas/refId"
        - $ref: "#/components/schemas/GPSPosition"
        - type: object
          properties:
            name:
              type: string
              minLength: 3
              maxLength: 128
              description: "A szállás neve"
            ratingID:
              type: string
              format: uri
              example: "/data/base/tag/975"
              description: |
                A szállás besorolásának ID-je  
                pl.: 5*
            descriptionsID:
              type: string
              format: uri
              description: Az leírást azonosító hívás
              example: "/data/base/descriptions/7643"
            typeID:
              type: string
              format: uri
              example: "/data/base/tag/652"
              description: |
                A szállás típusának ID-je  
                pl.: Hotel
            arrayOfServiceIDs:
              type: array
              description: "A szálláshoz tartozó szállás-, szoba- és sportszolgáltatások ID-i."
              nullable: true
              items:
                type: string
                format: uri
                example: "/data/base/tag/888"
                description: "A szolgáltatás ID-je"
            locations:
              type: object
              description: |
                A szállás helye: 
                  * ország
                  * város
                  * régió
                  * GPS koordináták
              required:
                - cityID
                - countryID
              properties:
                cityID:
                  type: string
                  format: uri
                  example: "/data/locatios/city/868"
                  description: A város ID-je, ahol a szállás található.
                countryID:
                  type: string
                  format: uri
                  example: "/data/locatios/counrty/869"
                  description: Az ország ID-je, ahol a szállás található.
                regionID:
                  type: string
                  format: uri
                  example: "/data/locatios/region/668"
                  description: A régió ID-je, ahol a szállás található. Elhagyható.
            arrayOfDescriptionIDs:
              type: array
              minItems: 1
              description: A szállás leírásait tartlamazó törzsadatok ID-i
              items:
                type: string
                format: uri
                example: "/data/base/descriptions/556"
                description: A leírás törzsadat azonosítója. Csak type=description az érvényes

    departuresHead:
      allOf:
        - $ref: "#/components/schemas/refId"
        - type: object
          properties:
            departureID:
              type: string
              format: uri
              example: "/data/prices/descriptions/556"
              description: Az indulás és úthossz azonosítója
            tripStart:
              type: string
              format: date
              description: "Az indulás ISO 8601 formátumú időbélyegzője"
              example: "2023-07-10"
              externalDocs:
                description: "Internet Date/Time Format syntax description"
                url: https://www.rfc-editor.org/rfc/rfc3339#section-5.6
            tripEnd:
              type: string
              format: date
              description: "A hazaérkezés ISO 8601 formátumú időbélyegzője"
              example: "2023-07-17"
              externalDocs:
                description: "Internet Date/Time Format syntax description"
                url: https://www.rfc-editor.org/rfc/rfc3339#section-5.6
            days:
              type: integer
              format: int32
              minimum: 0
              example: 8
              description: A program napjainak száma
            nights:
              type: integer
              format: int32
              minimum: 0
              example: 7
              description: A program éjszakáinak száma.

    progamScheme:
      allOf:
        - $ref: "#/components/schemas/refId"
        - type: object
          properties:
            arrayOfDepartures:
              type: array
              description: A program indulási dátumai, úthosszai és a hozzájuk tartozó legjobb árak adatai
              items:
                type: object
                allOf:
                  - $ref: "#/components/schemas/departuresHead"
                  - type: object
                    required:
                      - fullPrice
                    properties:
                      fullPrice:
                        type: integer
                        format: int64
                        minimum: 0
                        example: 349990
                        description: Az adott indulási nap és úthossz esetén a *kötelező elemeket tartalmazó* legolcsóbb foglalható szoba, teljes, fejenkénti ára
                      discountPrice:
                        type: integer
                        format: int64
                        minimum: 0
                        example: 319990
                        description: Az adott indulási nap és úthossz esetén a *kötelező elemeket tartalmazó* legolcsóbb foglalható szoba, kedvezményes, fejenkénti ára
                      discountID:
                        type: string
                        format: uri
                        example: "/data/base/tags/556"
                        description: Az induláshoz és úthosszhoz tartozó legjobb ár akció típusának ID-je
                      discountPriceValidUntil:
                        type: string
                        format: date
                        description: "A 'discountPrice' ár érvényessége végének az ISO 8601 formátumú időbélyegzője"
                        example: "2023-07-10"
                        externalDocs:
                          description: "Internet Date/Time Format syntax description"
                          url: https://www.rfc-editor.org/rfc/rfc3339#section-5.6
            locations:
              type: object
              description: A program által érintett helyszínek listája
              required:
                - departure
                - arrival
              properties:
                departure:
                  description: A program indulásának helyszíne
                  type: object
                  required:
                    - cityID
                    - countryID
                  properties:
                    cityID:
                      type: string
                      format: uri
                      example: "/data/locations/cities/556"
                      description: A program indulási városa
                    countryID:
                      type: string
                      format: uri
                      example: "/data/locations/countries/556"
                      description: A program indulásái városának országa
                    regionID:
                      type: string
                      format: uri
                      example: "/data/locations/regiones/556"
                      description: A program indulásái városának régiója. Elhagyható tulajdonság
                arrival:
                  type: object
                  description: A program desztinációjának első helyszínei
                  required:
                    - cityID
                    - countryID
                  properties:
                    cityID:
                      type: string
                      format: uri
                      example: "/data/locations/cities/556"
                      description: A program desztinációjának első városa
                    countryID:
                      type: string
                      format: uri
                      example: "/data/locations/countries/556"
                      description: A program desztinációjának első városának országa
                    regionID:
                      type: string
                      format: uri
                      example: "/data/locations/regiones/556"
                      description: A program desztinációjának első városának régiója
                arrayOfOtherLocationsID:
                  type: array
                  oneOf:
                    - minItems: 1
                  items:
                    type: string
                    format: uri
                    example: "/data/locations/cities/556"
                    description: "A program által érintett város ID-jeinek listája"
            arrayOfChildMaxAges:
              type: array
              minItems: 1
              description: |
                Az egyes gyerekek maximum életkora. A tömb a maximum gyerekkapacitással rendelkező szoba maximum életkorait tartalmazza.  
                **pl.: `[12,6]` jelentése:**
                * 1. gyerek max. 12 éves korig kaphat gyerekárat
                * 2. gyerek max. 6 éves korig kaphet gyerekárat
                Ezek az életkor limitek szállásonként globálisan vannak beállítva, nem függenek a szoba típúsától, de a szoba típúsa meghatározza a kapacitást.  
                ##### Tájékoztató jellegű információ, a pontos kapacitás az árak táblázatban, a /programs/{id*}/prices hívással érhető el
              example: "[12,6]"
              items:
                type: integer
                format: int32
                minimum: 2
                maximum: 19
            gallery:
              type: object
              description: "A programsémához tartozó kép- és videogaléria"
              required:
                - arrayOfImages
              properties:
                video:
                  type: string
                  format: uri
                  description: "A programsémához tartozó video URI címe, amely egy videomegosztó (youtube, vimeo, stb) 'embedd' URL-jét tartalmazza. A tulajdonság elhagyható."
                  example: "https://www.youtube.com/embed/yMJu-Vvl71M?enablejsapi=1"
                arrayOfImages:
                  type: array
                  minItems: 1
                  description: "A programhoz tartozó képek elérhetőségének és azok leírásainak a listája. A képek a www.budavartours.hu weboldalon található sorrendben vannak a tömbben"
                  items:
                    type: object
                    required:
                      - uri
                    properties:
                      uri:
                        type: string
                        format: uri
                        description: "A kép URI elérhetősége a cdn.budavartours.hu szerveren"
                        pattern: 'https\:\/\/cdn\.budavartours\.hu\/.*?$'
                        example: "https://cdn.budavartours.hu/binaries/content/gallery/budavar/programs/programscheme/szlovakia/pozsony/koronazasi-unnepseg-pozsonyban/1280px-eisenstadt_-_schloss_esterhazy.jpg"
                      descriptionID:
                        type: string
                        format: uri
                        example: "/data/prices/descriptions/556"
                        description: A képhez tartozó magyarázó szövege. (Nem egyenlő a kép HTML title attributumával)
            arrayOfDescriptionIDs:
              type: array
              minItems: 2
              description: |
                A programsémához tartozó leírások. Ezek az adminiszttrációs rendszerben felvett Programsémához tartozó összes leírás és az Alapprogramhoz tartozó összes leírás.  
                A leírás ID sorrendje megegyezik a www.budavartours.hu oldalon található szövegek megjelenési sorrendjével.  
                Legalább kettő ID-t kell tartalmaznia a tömbnek, amelyek:
                  * index 0: programséma leírás
                  * index 1: alapprogram leírás
              items:
                type: string
                format: uri
                example: "/data/base/descriptions/556"
            properties:
              type: object
              required:
                - arrayOfcateringIDs
                - programTypeID
                - arrayOfTravelModeIDs
                - arrayOfAccomodations
              properties:
                arrayOfCateringsID:
                  type: array
                  minItems: 1
                  description: A programsémához tartozó összes (szezonális is) ellátás ID-je.
                  items:
                    type: string
                    format: uri
                    example: "/data/base/basicData/556"
                programTypeID:
                  type: string
                  format: uri
                  example: "/data/base/basicData/586"
                  description: A programsémához tartozó programtípus ID-je.
                arrayOfTravelModesID:
                  type: array
                  minItems: 1
                  description: A programsémához tartozó összes utazási mód ID-je.
                  items:
                    type: string
                    format: uri
                    example: "/data/base/basicData/556"
                arrayOfAccomodations:
                  type: array
                  minItems: 1
                  description: A programsémához tartozó szállások listája
                  items:
                    allOf:
                      - $ref: "#/components/schemas/refId"
                      - $ref: "#/components/schemas/GPSPosition"
                      - type: object
                        required:
                          - name
                          - ratingID
                          - typeID
                          - location
                          - arrayOfServiceIDs
                          - arrayOfDescriptionIDs
                        properties:
                          name:
                            type: string
                            minLength: 3
                            maxLength: 128
                            description: "A szállás neve"
                          ratingID:
                            type: string
                            format: uri
                            example: "/data/base/tags/556"
                            description: |
                              A szállás besorolásának ID-je  
                              pl.: 5*
                          typeID:
                            type: string
                            format: uri
                            example: "/data/base/tags/556"
                            description: |
                              A szállás típusának ID-je  
                              pl.: Hotel
                          arrayOfServiceIDs:
                            type: array
                            description: "A szálláshoz tartozó szállás-, szoba- és sportszolgáltatások ID-i."
                            nullable: true
                            items:
                              type: string
                              format: uri
                              example: "/data/base/tags/559"
                              description: "A szolgáltatás ID-je"
                          location:
                            allOf:
                              - $ref: "#/components/schemas/GPSPosition"
                              - type: object
                                description: |
                                  A szállás helye: 
                                    * ország
                                    * város
                                    * régió
                                    * GPS koordináták
                                required:
                                  - cityID
                                  - countryID
                                properties:
                                  cityID:
                                    type: string
                                    format: uri
                                    example: "/data/locations/cities/556"
                                    description: A város ID-je, ahol a szállás található.
                                  countryID:
                                    type: string
                                    format: uri
                                    example: "/data/locations/ccountries/556"
                                    description: Az ország ID-je, ahol a szállás található.
                                  regionID:
                                    type: string
                                    format: uri
                                    example: "/data/locations/regions/556"
                                    description: A régió ID-je, ahol a szállás található. Elhagyható.
                          arrayOfDescriptionIDs:
                            type: array
                            minItems: 1
                            description: A szállás leírásait tartlamazó törzsadatok ID-i
                            items:
                              type: string
                              format: uri
                              example: "/data/base/cities/556"
