openapi: "3.0.3"
info:
  title: Budavár Tours szervezett utak - OpenAPI 3.0.3

  version: 1.1.0
externalDocs:
  description: Budavár Tours REST API leírás
  url: "https://docs.google.com/document/d/1QVYspyE4H4nVdV2geGMEK2JXC4KMswbgdjZiMhSNvAw/edit#heading=h.mwt5c55cq5n2"
servers:
  - url: "https://teszt.budavartours.hu/api/v1"
tags:
  - name: "törzsadatok"
    description: "Az utazási programok felépítéséhez nélülözhetetlen alapadatok"
  - name: "utazási programok"
    description: "Az egyes utazási programokat összefogó objektum"
  - name: "árak"
    description: "Az egyes utazási programokhoz tartozó árak, kedvezményes árak"
  - name: "helyszínek"
    description: Az egyes utazási programokhoz tartozó helyszínek és szállások
paths:
  /users:
    get:
      tags:
        - felhasználó
      summary: Az aktuális felhasználóra vonatkozó statisztikákat adja vissza
      description: |-
        Az aktuálisan bejelentkezett felhasználóra vonatkozó adoatok és statisztikák  

        **Adatok**  
          - felhasználó név
          - kapcsolattartó email cím
          - teljes név
          - utolsó belépés időpontja
          - felhasználó rate limit

        **Statisztikák**
          - utolsó 24 óra belépési kisérletek száma
          - utolsó 24 óra sikeres belépéseinek száma
          - utolsó 24 óra sikertelen belépéseinek száma
          - utolsó 24 óra sikeres kéréseinek száma
          - utolsó 24 óra hibás kéréseinek száma
          - utolsó 24 óra sikeres szever válaszainak száma
          - utolsó 24 óra hibás szever válaszainak száma
          - utolsó 24 óra átlagos válaszideje
      responses:
        "200":
          description: Sikeres belépés
  /users/login:
    post:
      tags:
        - felhasználó
        - hitelesítés
      summary: A felhasználó bejelentkezési kérése
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  maxLength: 128
                password:
                  type: string
                  maxLength: 256
                  format: password
              required:
                - username
                - password
      responses:
        "200":
          description: Sikeres belépés
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Hitelesítési token
        "401":
          description: "A hitelesítés nem sikerült: hibás a felhasználó vagy a jelszó"
  /users/logout:
    delete:
      tags:
        - felhasználó
        - hitelesítés
      summary: A hitelesítési token érvénytelenítése (kilépés)
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
      responses:
        "200":
          description: Sikeres kilépés
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/base:
    get:
      tags:
        - törzsadatok
        - alapadatok
      summary: A különböző típusú törzsadatok teljes listája
      description: |-
        Az utak teljes felépítéséhez az alapadatok adják a gerincet. Az alapadatok a törzsadatokból (*/data/base* hívás alatti hívások) és a lokációkból (*/data/locations* hívás alatti hívások) áll.  

        __A hívás a teljes törzsadat listát adja vissza.__ Ezt szűrni a felsorolt paraméterekkel lehet.

      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: type
          schema:
            type: string
            enum:
              [
                STORNO,
                ACCOMODATION,
                CITY,
                REGION,
                COUNTY,
                OPTIONAL_PROGRAM,
                PROGRAM_SCHEME,
                DISCOUNT,
                BASE_DATA,
                IMAGE,
                CATERING,
                ADDITIONAL_ITEM,
                PROGRAM_TYPE,
                ACCOMODATION_TYPE,
                ACCOMODATION_RATE,
                ACCOMODATION_SERVICE,
                ROOM_SERVICE,
                SPORT_SERVICE,
                TRAVEL_TYPE,
                ROOM_NAME,
                QUANTITYNAME,
                DISCOUNTTYPE,
                ITEM_ALTERNATIVE_VALUE,
              ]
          required: false
          allowEmptyValue: false
          description: A törzsadatok listájának szűkítése az adott törzsadat típusra
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: A törzsadatok listája
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                uniqueItems: true
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage" # hibát eredményező kérés esetén
                    - $ref: "#/components/schemas/option"
                    - $ref: "#/components/schemas/description"
                    - $ref: "#/components/schemas/basicData"
                    - $ref: "#/components/schemas/tag"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/base/option/:
    get:
      summary: Az option típusú törzsadat(ok) teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/option"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/base/option/{id*}:
    get:
      summary: A törzsadat(ok) listájának lekérése
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/option"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/base/description/:
    get:
      summary: A description típusú törzsadat(ok) teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/description"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/base/description/{id*}:
    get:
      summary: A törzsadat(ok) listájának lekérése
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/description"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/base/basicData/:
    get:
      summary: A basicData típusú törzsadat(ok) teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/basicData"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/base/basicData/{id*}:
    get:
      summary: A törzsadat(ok) listájának lekérése
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/basicData"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/base/tag/:
    get:
      summary: A tag típusú törzsadat(ok) teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/tag"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/base/tag/{id*}:
    get:
      summary: A törzsadat(ok) listájának lekérése
      tags:
        - törzsadatok
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/tag"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations:
    get:
      tags:
        - helyszínek
        - alapadatok
      summary: A külömböző típusú helyszínek és szállások teljes listája
      description: |-
        Az utak teljes felépítéséhez az alapadatok adják a gerincet. Az alapadatok a törzsadatokból (*/data/base* hívás alatti hívások) és a lokációkból (*/data/locations* hívás alatti hívások) áll.  

        __A hívás a teljes helyszín listát adja vissza.__ Ezt szűrni a felsorolt paraméterekkel lehet.

      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: type
          schema:
            type: string
            enum: [CITY, REGION, COUNTRY, ACCOMODATION]
          required: false
          allowEmptyValue: false
          description: A törzsadatok listájának szűkítése az adott törzsadat típusra
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: A törzsadatok listája
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                uniqueItems: true
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage" # hibát eredményező kérés esetén
                    - $ref: "#/components/schemas/location"
                    - $ref: "#/components/schemas/accomodation"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/city:
    get:
      summary: A városok teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/city/{id*}:
    get:
      summary: Egy vagy több város lekérése
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/country:
    get:
      summary: Az országok teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/locations/country/{id*}:
    get:
      summary: Egy vagy több ország lekérése
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/region:
    get:
      summary: A régiók teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  /data/locations/region/{id*}:
    get:
      summary: Egy vagy több régió lekérése
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/location"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/accomodation:
    get:
      summary: A szállások teljes listájának lekérése. Ezt szűrni a felsorolt paraméterekkel lehet.
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/accomodation"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/locations/accomodation/{id*}:
    get:
      summary: Egy vagy több szállás lekérése
      tags:
        - helyszínek
        - alapadatok
      parameters:
        - name: id
          in: path
          description: Az objektum azonosítója
          required: true
          schema:
            type: number
            format: int64
            minimum: 0
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/accomodation"
                  discriminator:
                    propertyName: type
                    mapping:
                      error: "#/components/schemas/serverMessage"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /data/programs:
    get:
      tags:
        - utazási programok
        - árak
      summary: Az egyes programsémák teljes listája
      description: |-
        Az utazási programok (programsémák) listáját adja vissza.

        __A hívás azösszes programsémát visszaadja.__ Ezt szűrni a felsorolt paraméterekkel lehet.

      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      responses:
        "200":
          description: A törzsadatok listája
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                uniqueItems: true
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage" # hibát eredményező kérés esetén
                    - $ref: "#/components/schemas/programScheme"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /programs/{id*}:
    get:
      parameters:
        - name: id
          in: path
          description: A program(ok) azonosítója
          required: true
          schema:
            type: integer
            format: int32
            example: 345
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      summary: A program(ok) részleteinek lekérése
      tags:
        - utazási programok
        - árak
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/programScheme"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /programs/locations/{id}:
    get:
      parameters:
        - name: id
          in: path
          description: A lokáció azonosítója
          required: true
          schema:
            type: integer
            format: int32
            example: 6889
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      summary: A program(ok) részleteinek lekérése
      tags:
        - utazási programok
        - árak
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/programScheme"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /programs/locations/{id}/prices:
    get:
      parameters:
        - name: id
          in: path
          description: A lokáció azonosítója
          required: true
          schema:
            type: integer
            format: int32
            example: 6889
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      summary: A program(ok) részleteinek lekérése
      tags:
        - utazási programok
        - árak
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/programScheme"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága

  /programs/{id*}/prices:
    get:
      parameters:
        - name: id
          in: path
          description: A program azonosítója
          required: true
          schema:
            type: integer
            format: int32
            example: 345
        - in: header
          name: Authorization
          schema:
            type: string
          required: true
          description: Hitelesítési token
        - in: query
          name: withRefPath
          schema:
            type: boolean
          required: false
          allowEmptyValue: true
          description: Amennyiben ez a paraméter jelen van a kérésben és a válasz tartalmaz ID-t értékként, a válaszba bekerül egy ___*RefId___ változó, amely az ID API hívását tartlamazza.
        - in: query
          name: isUpdatedFromTime
          schema:
            $ref: "#/components/schemas/timestamp"
          required: false
          allowEmptyValue: false
          description: |
            A törzsadatok listájának szűkítése csak azokra az adatokra, amelyek a megadott időpont után változtak.  
            A formátum ISO 8601 időbélyegző  
            [Internet Date/Time Format syntax description](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      summary: A program részletes árának lekérése
      tags:
        - árak
        - utazási programok
      responses:
        "200":
          description: Sikeres lekérdezés
          content:
            application/json:
              schema:
                type: array
                minItems: 1
                items:
                  oneOf:
                    - $ref: "#/components/schemas/serverMessage"
                    - $ref: "#/components/schemas/programPrices"
        "401":
          description: A felhasználónak a híváshoz nincs jogosultsága
  # /programs/{id}/prices/{departureID*}:
  # /departures/{id*}:

  # /history:

components:
  schemas:
    id:
      type: number
      format: int64
      minimum: 0
      description: Az objektum egyedi azonosítója

    refId:
      type: string
      format: uri
      description: Az objektumot egyedi REST API hívása.
      minLength: 1
      externalDocs:
        description: "API Best Practice dokumentum: Terrifically Simple JSON"
        url: https://github.com/mpnally/Terrifically-Simple-JSON

    title:
      type: string
      minLength: 3
      maxLength: 128
      description: Az objektum megjelenítendő neve.

    timestamp:
      type: string
      format: date-time
      description: "ISO 8601 időbélyegző"
      externalDocs:
        description: "Internet Date/Time Format syntax description"
        url: https://www.rfc-editor.org/rfc/rfc3339#section-5.6

    dateTimestamp:
      type: string
      format: date-time
      description: "ISO 8601 időbélyegző"
      externalDocs:
        description: "Internet Date/Time Format syntax description"
        url: https://www.rfc-editor.org/rfc/rfc3339#section-5.6

    serverMessage:
      description: Rövid hibajelentés a szervertől.
      type: object
      required:
        - timestamp
        - originalCall
        - status
        - message
        - description
      properties:
        timestamp:
          description: A szerver üzenet generálásának időpontja.
          example: "2023-04-12T23:20:50.52Z"
          oneOf:
            - $ref: "#/components/schemas/timestamp"
        originalCall:
          description: A szerver üzenetet generáló eredeti, `teljes` REST hívás, HTTP metódussal
          example: GET https://api.budavartours.hu/v1/data/base/basicData/8511
          oneOf:
            - $ref: "#/components/schemas/refId"
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 999
          description: Szerver üzenethez tartozó HTTP kód
          example: 404
        message:
          type: string
          maxLength: 64
          description: A hibakód rövid, angol nyelvű magyarázata
          example: "Object not found"
        description:
          type: string
          maxLength: 512
          description: A hibakódhoz tartozó angol nyelvű, részletes leírás
          example: "The object does not exist. Wait 20 seconds and try again"

    option:
      description: |
        __TÖRZSADAT FAJTA__  

        __Globális beállítás__  
          
        __Célja:__ olyan adatokat tárolni, amelyek nem kapcsolódnak szorosan az árualaphoz.  
        pl.: Sztornó százalék, HUF-EUR kurzus váltó, stb.  

        __Hívás útvonal:__ /data/baseData/option/
      type: object
      required:
        - id
        - title
        - value
        - type
      properties:
        id:
          description: A törzsadat azonosító Id-ja.
          example: 844
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A törzsadatra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: "/data/baseData/option/594"
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A törzsadat megjelenítésre alkalmas elnevezése.
          example: "Sztornó biztosítás"
          oneOf:
            - $ref: "#/components/schemas/title"
        value:
          description: A törzsadat értéke.
          nullable: true
          oneOf:
            - type: string
              minLength: 1
              maxLength: 128
              example: "valami"
            - type: number
              format: float
              example: 0.025
            - type: number
              format: int64
              example: 6
        type:
          type: string
          enum: [STORNO]
          description: |
            A törzsadat típusa/csoportja/szülője. Lehetséges értékei:   
            * __STORNO__ - A Budavár Tours sztornóértéke törtszámként kifejezve (pl.: 0.025)
          example: "STORNO"

    description:
      description: |
        __TÖRZSADAT FAJTA__  

        __Objektumhoz tartozó leírás__
          
        __Célja:__ az egyes objektumokhoz tartozó hosszú leírások tárolása, így a válaszok méretének és a redundéns megjelenítés csökkentése  
        __Hívás útvonal:__ /data/baseData/description/  

        Egy objektumhoz tartozó, kiegészítő információkat tartalmazó, HTML előformázott, escape-t szöveg
      type: object
      required:
        - id
        - title
        - value
        - type
      properties:
        id:
          description: A törzsadat azonosító Id-ja.
          example: 844
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A törzsadatra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: "/data/baseData/option/594"
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A törzsadat megjelenítésre alkalmas elnevezése.
          example: "Sztornó biztosítás"
          oneOf:
            - $ref: "#/components/schemas/title"
        value:
          description: Maga a HTML előformázott leírás
          example: |-
            <p class=""><b class="">1. nap: Budapest-Korfu</b><br>  
            Elutazás Korfura charterjárattal. Érkezés után transzfer a szállodába. Szabadprogram. Vacsora (amennyiben a program tartalmazza) és szállás Korfun. </p>...
          nullable: true
          type: string
          minLength: 1
          maxLength: 8192
        type:
          type: string
          enum:
            [
              ACCOMODATION,
              CITY,
              REGION,
              COUNTY,
              OPTIONAL_PROGRAM,
              PROGRAM_SCHEME,
              DISCOUNT,
              BASE_DATA,
              IMAGE,
            ]
          description: |
            A törzsadat típusa/csoportja/szülője. Lehetséges értékei:   
              * __ACCOMODATION__ - Szálláshoz tartozó leírás
              * __CITY__ - Város lokációhoz tartozó leírás
              * __REGION__ - Régió lokációhoz tartozó leírás
              * __COUNTY__ - Ország lokációhoz tartozó leírás
              * __OPTIONAL_PROGRAM__ - Fakultatív programhoz tartozó leírás
              * __PROGRAM_SCHEME__ - Programsémához tartozó leírás
              * __DISCOUNT__ - Egy akcióhoz tartozó leírás
              * __BASE_DATA__ - Törzsadathoz tartozó leírás
              * __IMAGE__ - Egy programséma képeihez tartozó leírás
          example: "CITY"

    basicData:
      description: |
        __TÖRZSADAT FAJTA__  

        __Olyan törzsadatok, amelyek leírással is rendelkeznek__


        __Célja:__ Az általános törzsadatok tárolása és a kulcs-érték-leírás hármas öszefogása.  
        __Hívás útvonal:__ /data/base/basicData/
      type: object
      required:
        - id
        - title
        - type
        - descriptionId
      properties:
        id:
          description: A törzsadat azonosító Id-ja.
          example: 844
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A törzsadatra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: "/data/baseData/option/594"
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A törzsadat megjelenítésre alkalmas elnevezése.
          example: "Sztornó biztosítás"
          oneOf:
            - $ref: "#/components/schemas/title"
        type:
          type: string
          enum:
            [
              CATERING,
              ADDITIONAL_ITEM,
              PROGRAM_TYPE,
              ACCOMODATION_TYPE,
              ACCOMODATION_RATE,
              ACCOMODATION_SERVICE,
              ROOM_SERVICE,
              SPORT_SERVICE,
              TRAVEL_TYPE,
            ]
          example: "ADDITIONAL_ITEM"
          description: |
            A törzsadat típusa/csoportja/szülője. Lehetséges értékei:   
              * __CATERING__ - Ellátás megnevezése és leírása (pl.: önellátás, reggeli, félpanzió)
              * __ADDITIONAL_ITEM__ - Felárak megnevezése és leírása (pl.: Elsőbbségi beszállás; Atlasz Classic Kalkulált biztosítás)
              * __PROGRAM_TYPE__ - Program megnevezése és leírása (pl.: repülőjegy, hajóút, körutazás)
              * __ACCOMODATION_TYPE__ - Szállástípus megnevezése és leírása (pl.: apartman, hotel, butikhotel)
              * __ACCOMODATION_RATE__ - Szállásbesorolás megnevezése és leírása (pl.: 2*+, A kategória, 5*)
              * __ACCOMODATION_SERVICE__ - Szállásszolgáltatás megnevezése és leírása. (pl.: parkoló)
              * __ROOM_SERVICE__ - Az egyes szobához kapcsolható szolgáltatás megnevezése és leírása. (pl.: medencebár)
              * __SPORT_SERVICE__ - Szálláson igénybe vehető sport- és wellness szolgáltatások megnevezése és leírása. Ezekbe beletartoznak az szállás szoba- és sportszolgáltatásai is. (pl.: parkoló, medencebár, vasaló)
              * __TRAVEL_TYPE__ - Utazási mód megnevezése és leírása (pl.: autóbusszal, egyénileg)
        descriptionId:
          description: A törzsadat azonosítója. Egy _basicData_ törzsadatnak csak egy leírása lehet
          example: "/data/base/descriptions/556"
          oneOf:
            - $ref: "#/components/schemas/id"
        descriptionRef:
          oneOf:
            - $ref: "#/components/schemas/refId"

    tag:
      description: |
        __TÖRZSADAT FAJTA__  

        __Objektum cimkéi__  

        __Célja:__ az egyes objektumokhoz tartozó rövid információk, szövegrészek (pl.: szobanév, szállásbesorolás) tárolása. Ehhez a törzsadathoz _NEM_ tartozik sem leírás, sem érték, csak a megnevezés.
        __Hívás útvonal:__ /data/base/tag/
      type: object
      required:
        - id
        - title
        - type
      properties:
        id:
          description: A törzsadat azonosító Id-ja.
          example: 844
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A törzsadatra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: "/data/baseData/option/594"
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A törzsadat megjelenítésre alkalmas elnevezése.
          example: "Sztornó biztosítás"
          oneOf:
            - $ref: "#/components/schemas/title"
        type:
          type: string
          enum: [ROOM_NAME, QUANTITYNAME, DISCOUNTTYPE, ITEM_ALTERNATIVE_VALUE]
          example: "ROOM_NAME"
          description: |
            A törzsadat típusa/csoportja/szülője. Lehetséges értékei:  
            * __ROOMNAME__ - Lakóegység neve. Az egyszerűség miatt NEM bontjuk további tulajdonságokra (pl.: fekvés [kerti], kilátás [tengerre néző], szint [szuperior]), hanem egyben adjuk meg.
            * __QUANTITYNAME__ - Egy tétel mennyiségjelzője. (pl.: /nap; /fő; /foglalás)
            * __DISCOUNTTYPE__ - Egy akció típusa. 
              Jelenleg 4 akciótípus van a rendszerünkben: 
                - __AKCIÓS__ - nincs az akciónak kiemelt tulajdonsága
                - __FIRST MINUTE__ - előfoglalási akció
                - __LAST MINUTE__ - közeli indulású vagy korlátozott foglalhatóságú utakra adott akció
                - __NINCS AKCIÓBAN__ - "Technikai hack" a katalógus árak időponthoz kötött változtatására. (Pl.: A gyorsan fogyó helyek miatt a referens kéri, hogy 1 hónapig X%-val magasabbak legyenek az árak)  
            * __ITEM_ALTERNATIVE_VALUE__ - Felárak esetében van egy "Memo" tulajdonság, ami a 0 forintos tételek esetén az ár helyett jelenik meg.  
              pl.: "0 ft/foglalás" helyett "Ajándék!"  
              Az ár számítás továbbra is 0 Ft-tal történik.

    GPSPosition:
      description: |
        __RÉSZOBJEKTUM__

        A lokáció térképen való elhelyezéshez használt GPS koordináták.  
        Nincs hozzá különálló hívás.
      type: object
      required:
        - latitude
        - longitude
        - zoom
      properties:
        latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          nullable: true
          description: A GPS koordináta ___latitude___ komponense. Amennyiben ___null___, az objektum __latitude ÉS longitude ÉS zoom__ tulajdonsága is érvénytelen és a szülő objektum GPS koordinátáit (lat,long,zoom) kell használni
          example: 47.5059676
        longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          nullable: true
          description: A GPS koordináta ___longitude___ komponense. Amennyiben ___null___, az objektum __latitude ÉS longitude ÉS zoom__ tulajdonsága is érvénytelen és a szülő objektum GPS koordinátáját kell használni
          example: 19.0376893
        zoom:
          type: number
          format: float
          minimum: 1
          maximum: 20
          nullable: true
          description: A GPS koordináta ___zoom___ komponense. Amennyiben ___null___, az objektum __latitude ÉS longitude ÉS zoom__ tulajdonsága is érvénytelen és a szülő objektum GPS koordinátáját kell használni
          example: 14.8

    location:
      description: |
        __HELYSZÍN__  

        Egy helyszínt jelölő objektum (pl.: város, ország)  
            
        A törzsadat fa három szintű (ország / régió / város), így az egyéb szinteket (pl.: POI, városrész) a város alá soroltuk be.  

        __Hívás útvonal:__ /data/locations/country/
      type: object
      required:
        - id
        - title
        - parentId
        - arrayOfDescriptionsIds
        - type
      properties:
        id:
          description: A lokáció azonosító Id-ja.
          example: 9667
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A lokációra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: "/data/baseData/option/9667"
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A lokáció megjelenítésre alkalmas elnevezése.
          example: "Magyarország"
          oneOf:
            - $ref: "#/components/schemas/title"
        parentId:
          description: |
            A lokáció szülő lokációjának azonosítója.  
            Amennyiben a lokáció típusa ___ország (COUNTRY)___ vagy ___város (CITY)___, a tulajdonság lehet ___null___. Minden más típus esetén ___kell___ parentId.  

            1 lokációhoz csak 1 szülő tartozhat (fa struktúra miatt).  

            Az egyes lokációknak csak ezen típusú lokációk lehet a szülője:

            ACCOMODATION -> CITY -> REGION -> COUNTRY
          example: 19923
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/id"
        parentRefId:
          description: |
            A szülő lokáció API hívása.  
            Egyéb tudnivalókhoz lásd fentebb ___parentId___
          example: /data/location/19923
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/refId"
        arrayOfChildrenIds:
          description: A lokáció alá besorolt lokációk azonosítója. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          type: array
          nullable: true
          minItems: 1
          example: [11112, 3332, 334]
          items:
            oneOf:
              - $ref: "#/components/schemas/id"
        arrayOfChildrenRefIds:
          description: |
            A lokáció alá besorolt lokációk API hívása.  

            Az egyes lokációk alá csak ezek a típusú lokációk tartozhatnak:
            COUNTRY -> REGION -> CITY -> ACCOMODATION
            A ___régió (REGION)___ típusú lokáció kihagyható a láncból, azaz egy ___ország (COUNTRY)__ közvetlen gyermeke lehet egy ___város (CITY)___ típusú lokáció.
          type: array
          nullable: true
          minItems: 1
          example:
            [
              "/data/locations/region/11112",
              "/data/locations/city/3332",
              "/data/locations/city/334",
            ]
          items:
            oneOf:
              - $ref: "#/components/schemas/id"
        arrayOfDescriptionsIds:
          description: |
            A lokációhoz tartozó leírások Id-jeinek listája.
          type: array
          minItems: 1
          example: [66754, 4445]
          items:
            oneOf:
              - $ref: "#/components/schemas/id"
        arrayOfDescriptionsRefs:
          description: |
            A lokációhoz tartozó leírások API hívása. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          type: array
          minItems: 1
          example:
            ["/data/base/descriptions/556", "/data/base/descriptions/89832"]
          items:
            oneOf:
              - $ref: "#/components/schemas/refId"
        gallery:
          type: object
          description: A lokációhoz tartozó képgalériában található elemek hivatkozásai.
          required:
            - arrayOfImages
            - video
          properties:
            arrayOfImages:
              type: array
              minItems: 1
              description: A lokációhoz tartozó képek elérhetőségének és azok leírásainak a listája. A képek a www.budavartours.hu weboldalon található sorrendben vannak a tömbben
              items:
                type: object
                required:
                  - uri
                properties:
                  uri:
                    type: string
                    format: uri
                    nullable: true
                    description: A kép URI elérhetősége a cdn.budavartours.hu szerveren. A tulajdonság csak akkor ___null___, ha még nincs a programsémához feltöltve kép.
                    pattern: 'https\:\/\/cdn\.budavartours\.hu\/.*?$'
                    example: "https://cdn.budavartours.hu/binaries/content/gallery/budavar/programs/programscheme/szlovakia/pozsony/koronazasi-unnepseg-pozsonyban/1280px-eisenstadt_-_schloss_esterhazy.jpg"
                  descriptionId:
                    description: A képhez tartozó magyarázó szöveg Id-ja.
                    example: 93339
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  descriptionRefId:
                    description: |
                      A képhez tartozó magyarázó szövegre mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/descriptions/93339"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
        type:
          type: string
          enum: [CITY, REGION, COUNTRY]
          example: "REGION"
          description: |
            A törzsadat típusa/csoportja/szülője. Lehetséges értékei:  
              * __CITY__ - város, városrész, látványosság
              * __REGION__ - földrajzi, közigazgatási vagy történelmi régió
              * __COUNTRY__ - független állam, lásd: (https://hu.wikipedia.org/wiki/Kontinensek_%C3%A9s_orsz%C3%A1gok_list%C3%A1ja)

    accomodation:
      description: |
        __HELYSZÍN__  

        Egy szállást (pl.: hotel, apartman) jelölő objektum  

        __Célja:__ A törzsadatokból és helyszínekből összerakott szállás és minden tulajdonságát tartalmazó objektum.  

        __Hívás útvonal:__ /data/locations/accomodation/
      type: object
      required:
        - id
        - title
        - ratingId
        - typeId
        - arrayOfDescriptionIds
        - arrayOfServiceIds
        - locations
        - type
      properties:
        id:
          description: A szállás azonosító Id-ja.
          example: 44322
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A szállásra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: /data/locations/accomodation/44322
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A szállás megjelenítésre alkalmas elnevezése.
          example: "Gela Apartman"
          oneOf:
            - $ref: "#/components/schemas/title"
        ratingId:
          description: |
            A szállás besorolásának törzsadat ID-je. pl.: 5* azonosítója - 872
            Egy szálláshoz csak egy besorolás tartozhat.
            Amennyiben a szállás típusa NEM __hotel vagy üdülőfalu__ a tulajdonság értéke lehet ___null___ esetén nincs
          example: 872
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/id"
        ratingRefId:
          description: |
            A szállás besorolásának REST API hívása. pl.: 5* hívása - /data/base/basicDatas/872
          example: /data/base/basicDatas/872
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/refId"
        arrayOfDescriptionIds:
          description: A szálláshoz tartozó leírások Id-knak a listája.
          type: array
          minItems: 1
          example: [220, 5544]
          items:
            oneOf:
              - $ref: "#/components/schemas/id"
        arrayOfDescriptionRefIds:
          description: A szálláshoz tartozó leírások API a listája.
          type: array
          minItems: 1
          example:
            ["/data/base/descriptions/220", "/data/base/descriptions/5544"]
          items:
            oneOf:
              - $ref: "#/components/schemas/refId"
        typeId:
          description: |
            A szállás típusának (pl.: hotel, apartman) törzsadat Id-je.
          example: 872
          oneOf:
            - $ref: "#/components/schemas/id"
        typeRefId:
          description: |
            A szállás típusának REST API hívása. pl.: 'hotel' hívása - /data/base/tag/993
          example: /data/base/tag/993
          oneOf:
            - $ref: "#/components/schemas/refId"
        arrayOfServiceIds:
          description: |
            A szálláson igénybe vehető szolgáltatások (szállás-, szoba- és sportszolgáltatások) Id-i.
          type: array
          example: [7848, 446, 863, 33326]
          minItems: 1
          items:
            oneOf:
              - $ref: "#/components/schemas/id"
        arrayOfServiceRefIds:
          description: "A szálláshoz tartozó szállás-, szoba- és sportszolgáltatások teljes REST hívása."
          type: array
          minItems: 1
          nullable: true
          example:
            [
              "/data/base/tag/7848",
              "/data/base/tag/446",
              "/data/base/tag/863",
              "/data/base/tag/33326",
            ]
          items:
            oneOf:
              - $ref: "#/components/schemas/refId"
        locations:
          type: object
          description: |
            A szállás helye: 
              * ország
              * város
              * régió - ha van
              * GPS koordináták - ha van
          required:
            - cityId
            - countryId
          properties:
            cityId:
              description: A lokáció azonosító Id-ja.
              example: 9667
              oneOf:
                - $ref: "#/components/schemas/id"
            cityRefId:
              type: string
              format: uri
              example: "/data/locatios/city/868"
              description: A város ID-je, ahol a szállás található.
            countryId:
              description: A lokáció azonosító Id-ja.
              example: 9667
              oneOf:
                - $ref: "#/components/schemas/id"
            countryRefId:
              type: string
              format: uri
              example: "/data/locatios/counrty/869"
              description: Az ország ID-je, ahol a szállás található.
            regionId:
              description: A lokáció azonosító Id-ja.
              example: 9667
              oneOf:
                - $ref: "#/components/schemas/id"
            regionRefId:
              type: string
              format: uri
              example: "/data/locatios/region/668"
              description: A régió ID-je, ahol a szállás található. Elhagyható.
            gpsPosition:
              description: A szállás GPS koordinátái
              oneOf:
                - $ref: "#/components/schemas/GPSPosition"
        gallery:
          type: object
          description: A lokációhoz tartozó képgalériában található elemek hivatkozásai.
          required:
            - arrayOfImages
            - video
          properties:
            arrayOfImages:
              type: array
              minItems: 1
              description: A lokációhoz tartozó képek elérhetőségének és azok leírásainak a listája. A képek a www.budavartours.hu weboldalon található sorrendben vannak a tömbben
              items:
                type: object
                required:
                  - uri
                properties:
                  uri:
                    type: string
                    format: uri
                    nullable: true
                    description: A kép URI elérhetősége a cdn.budavartours.hu szerveren. A tulajdonság csak akkor ___null___, ha még nincs a programsémához feltöltve kép.
                    pattern: 'https\:\/\/cdn\.budavartours\.hu\/.*?$'
                    example: "https://cdn.budavartours.hu/binaries/content/gallery/budavar/programs/programscheme/szlovakia/pozsony/koronazasi-unnepseg-pozsonyban/1280px-eisenstadt_-_schloss_esterhazy.jpg"
                  descriptionId:
                    description: A képhez tartozó magyarázó szöveg Id-ja.
                    example: 93339
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  descriptionRefId:
                    description: |
                      A képhez tartozó magyarázó szövegre mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/descriptions/93339"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
        type:
          type: string
          enum: [ACCOMODATION]
          example: "ACCOMODATION"
          description: |
            A szállás típusa/csoportja/szülője. Lehetséges értékei:  
              * __ACCOMODATION__ - szállás

    departuresHead:
      description: |
        __RÉSZOBJEKTUM__

        Egy programsémában lévő indulások főbb paramétereit tartalmazza.  
        ___Nincs hozzá különálló hívás.___
      type: object
      required:
        - id
        - dateOfTripStart
        - dateOfTripEndDate
        - days
        - nights
      properties:
        id:
          description: Az indulás azonosító Id-ja.
          example: 223455
          oneOf:
            - $ref: "#/components/schemas/id"
        dateOfTripStart:
          description: A turnus indulási dátuma
          example: "2023-04-20"
          oneOf:
            - $ref: "#/components/schemas/dateTimestamp"
        dateOfTripEndDate:
          description: A turnus hazaérkezési dátuma
          example: "2023-04-27"
          oneOf:
            - $ref: "#/components/schemas/dateTimestamp"
        days:
          type: integer
          format: int32
          minimum: 0
          example: 8
          description: A program napjainak száma
        nights:
          type: integer
          format: int32
          minimum: 0
          example: 7
          description: A program éjszakáinak száma.

    programScheme:
      description: |
        __UTAZÁSI PROGRAM__  

        Egy komplett utazást összefogó objektum  

        __Célja:__ A törzsadatokból, lokációkból és időpontokból összerakott ___program áttekintő nézetét létrehozni___.  
        A programsémához tartozó árazásokat és kapacitásokat nem tartalmazza.   

        __Hívás útvonal:__ /data/program/
      type: object
      required:
        - id
        - title
        - arrayOfDepartureDates
        - locations
        - arrayOfChildMaxAges
        - gallery
        - arrayOfDescriptionIds
        - programProperties
      properties:
        id:
          description: A programséma azonosító Id-ja.
          example: 1940
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A programsémára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: /data/program/1940
          oneOf:
            - $ref: "#/components/schemas/refId"
        title:
          description: A programséma megjelenítésre alkalmas elnevezése.
          example: "Gela Apartman debreceni indulással"
          oneOf:
            - $ref: "#/components/schemas/title"
        arrayOfDepartureDates:
          type: array
          description: A program indulási dátumai, úthosszai és a hozzájuk tartozó legjobb árak adatai
          items:
            type: object
            allOf:
              - $ref: "#/components/schemas/departuresHead"
              - type: object
                required:
                  - fullPrice
                properties:
                  fullPrice:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 349990
                    description: Az adott indulási nap és úthossz esetén a *kötelező elemeket tartalmazó* legolcsóbb foglalható szoba, teljes, fejenkénti ára
                  discountPrice:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 319990
                    description: |
                      __Amennyiben az adott dátum-úthossz párra van érvényes akció__  
                      Az adott indulási nap és úthossz esetén a *kötelező elemeket tartalmazó* legolcsóbb foglalható szoba, kedvezményes, fejenkénti ára
                  discountTypeId:
                    description: |
                      __Amennyiben az adott dátum-úthossz párra van érvényes akció__  
                      Az induláshoz és úthosszhoz tartozó legjobb ár akció típusának ID-je
                    example: 743
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  discountTypeRefId:
                    description: |
                      __Amennyiben az adott dátum-úthossz párra van érvényes akció__  
                      Az akció típusára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/tag/743"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
                  discountPriceValidUntil:
                    description: |
                      __Amennyiben az adott dátum-úthossz párra van érvényes akció__  
                      A 'discountPrice' ár érvényessége a lejárata. Az mindig az adott nap 23:59:59-t jelenti.  
                      pl.: 2023-10-10 = 2023-10-11-én már ___NEM___ lesz érvényes az adott ár
                    example: "2023-07-10"
                    oneOf:
                      - $ref: "#/components/schemas/dateTimestamp"
        locations:
          type: object
          description: |
            A program által érintett helyszínek listája.  
            A lista alapja a város, de az egyszerűbb feldolgozás érdekében feltüntetjük az indulási országot és a opcionálisan (nem minden városhoz tartozik régió) a régiót is.
          required:
            - departure
            - arrival
          properties:
            departure:
              description: A program indulásának helyszínét összefogó objektum
              type: object
              required:
                - cityId
                - countryId
              properties:
                cityId:
                  description: A program indulási város Id-je
                  example: 556
                  oneOf:
                    - $ref: "#/components/schemas/id"
                cityRefId:
                  description: |
                    A program dátum-úthossz pár indulási városára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/cities/556"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
                countryId:
                  description: A program indulási ország Id-je. #Ezt az Id-t ki lehetne kalkulálni a cityId által meghatározott objektum arrayOfParentId tömbjéből, de megadni egyszerűbb
                  example: 1856
                  oneOf:
                    - $ref: "#/components/schemas/id"
                countryRefId:
                  description: |
                    A program dátum-úthossz pár indulási országára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/country/1856"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
                regionId:
                  description: A program indulási régió Id-je. #Ezt az Id-t ki lehetne kalkulálni a cityId által meghatározott objektum arrayOfParentId tömbjéből, de megadni egyszerűbb
                  example: 43992
                  oneOf:
                    - $ref: "#/components/schemas/id"
                regionRefId:
                  description: |
                    A program dátum-úthossz pár indulási régiójára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/country/43992"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
            arrival:
              type: object
              description: A program - körutazás esetén az első - cél helyszíne
              required:
                - cityId
                - countryId
              properties:
                cityId:
                  description: A program érkezési város Id-je
                  example: 556
                  oneOf:
                    - $ref: "#/components/schemas/id"
                cityRefId:
                  description: |
                    A program dátum-úthossz pár érkezési városára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/cities/556"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
                countryId:
                  description: A program érkezési ország Id-je. #Ezt az Id-t ki lehetne kalkulálni a cityId által meghatározott objektum arrayOfParentId tömbjéből, de megadni egyszerűbb
                  example: 1856
                  oneOf:
                    - $ref: "#/components/schemas/id"
                countryRefId:
                  description: |
                    A program dátum-úthossz pár érkezési országára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/country/1856"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
                regionId:
                  description: A program érkezési régió Id-je. #Ezt az Id-t ki lehetne kalkulálni a cityId által meghatározott objektum arrayOfParentId tömbjéből, de megadni egyszerűbb
                  example: 43992
                  oneOf:
                    - $ref: "#/components/schemas/id"
                regionRefId:
                  description: |
                    A program dátum-úthossz pár érkezési régiójára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                  example: "/data/locations/country/43992"
                  oneOf:
                    - $ref: "#/components/schemas/refId"
            arrayOfOtherLocationIds:
              description: A program által érintett város Id-jeinek listája a kiindulási és érkezési helyszínt kivéve. ___Csak városok___!
              type: array
              minItems: 0
              items:
                type: object
                required:
                  - cityId
                properties:
                  cityId:
                    description: Az érinett város Id-je
                    example: 556
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  cityRefId:
                    description: |
                      A program dátum-úthossz pár érkezési városára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/locations/cities/556"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
        arrayOfChildMaxAges:
          description: |
            Az egyes gyerekek maximum életkora.  
            A tömb a maximum gyerekkapacitással rendelkező szoba maximum életkorait tartalmazza.  

            pl.: `[12,6]` jelentése:  

            * 1. gyerek max. 12 éves korig kaphat gyerekárat, ha már betöltötte a 12. életévét, felnőttenk számít.  
            * 2. gyerek max. 6 éves korig kaphet gyerekárat, ha már betöltötte a 6. életévét, felnőttnek számít.  

            Ezek az életkor limitek szállásonként globálisan vannak beállítva, nem függenek a szoba típúsától, de a szoba típúsa meghatározza a kapacitást, így meghatároz___hatja___ a maximum gyerek életkort.  

            __FONTOS!__: Tájékoztató jellegű információ. A pontos szobakiosztás, szobakapacitás, gyerek élrtkor az árak táblázatban tételesen fel vannak sorolva!
          type: array
          minItems: 1
          example: [12, 6]
          items:
            type: integer
            format: int32
            minimum: 2
            maximum: 18
        gallery:
          type: object
          description: A programsémához tartozó kép- és videogalériában található elemek hivatkozásai.
          required:
            - arrayOfImages
            - video
          properties:
            video:
              type: string
              format: uri
              nullable: true
              description: "A programsémához tartozó video URI címe, amely egy videomegosztó (youtube, vimeo, stb) 'embedd' URL-jét tartalmazza."
              example: "https://www.youtube.com/embed/yMJu-Vvl71M?enablejsapi=1"
            arrayOfImages:
              type: array
              minItems: 1
              description: A programhoz tartozó képek elérhetőségének és azok leírásainak a listája. A képek a www.budavartours.hu weboldalon található sorrendben vannak a tömbben
              items:
                type: object
                required:
                  - uri
                properties:
                  uri:
                    type: string
                    format: uri
                    nullable: true
                    description: A kép URI elérhetősége a cdn.budavartours.hu szerveren. A tulajdonság csak akkor ___null___, ha még nincs a programsémához feltöltve kép.
                    pattern: 'https\:\/\/cdn\.budavartours\.hu\/.*?$'
                    example: "https://cdn.budavartours.hu/binaries/content/gallery/budavar/programs/programscheme/szlovakia/pozsony/koronazasi-unnepseg-pozsonyban/1280px-eisenstadt_-_schloss_esterhazy.jpg"
                  descriptionId:
                    description: A képhez tartozó magyarázó szöveg Id-ja.
                    example: 93339
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  descriptionRefId:
                    description: |
                      A képhez tartozó magyarázó szövegre mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/descriptions/93339"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
        arrayOfDescriptionIds:
          description: |
            A programsémához tartozó leírások. 
            Legalább kettő ID-t kell tartalmaznia a tömbnek, amelyek:
              * index 0: bevezető szöveg
              * index 1-től: részletes programinformációk
          type: array
          minItems: 2
          items:
            type: object
            required:
              - descriptionId
            properties:
              descriptionId:
                description: A programsémához tartozó leírás Id-ja.
                example: 93339
                oneOf:
                  - $ref: "#/components/schemas/id"
              descriptionRefId:
                description: |
                  A programsémához tartozó leírásra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example: "/data/base/descriptions/93339"
                oneOf:
                  - $ref: "#/components/schemas/refId"
        programProperties:
          description: |
            A programséma tulajdonságait felsoroló, összesített listák.  

            Egyas tulajdonságok (pl.: ellátás) a program árazásánál eltérhetnek.  

            Pl.: A szállás év közben csak félpanziós ellátást nyújt, de december 31-én kötelezően fizetendő gálavacsorát is ad. Ezt egy extra ellátásként (félpanzió szilveszteri gálasvacsorával) kezeljük, nem felárként és az árazási adatok között erre hivatkozunk.
          type: object
          required:
            - arrayOfcateringIds
            - programTypeId
            - arrayOfTravelModeIds
            - arrayOfAccomodations
          properties:
            arrayOfCateringIds:
              description: A programsémához tartozó összes (szezonális is) ellátás ID-je.
              type: array
              minItems: 1
              items:
                type: object
                required:
                  - cateringId
                properties:
                  cateringId:
                    description: A programsémához tartozó ellátás Id-ja.
                    example: 2345
                    oneOf:
                      - $ref: "#/components/schemas/id"
            arrayOfCateringRefIds:
              description: A programsémához tartozó összes (szezonális is) ellátásra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
              type: array
              minItems: 1
              items:
                type: object
                required:
                  - cateringRefId
                properties:
                  cateringRefId:
                    description: |
                      A programsémához tartozó ellátás mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/basicData/2345"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
            programTypeId:
              description: A programsémához tartozó programtípus ID-je.
              example: 25
              oneOf:
                - $ref: "#/components/schemas/id"
            programTypeRefId:
              description: |
                A programsémához tartozó programtípusra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
              example: "/data/base/basicData/25"
              oneOf:
                - $ref: "#/components/schemas/refId"
            arrayOfTravelModeIds:
              type: array
              minItems: 1
              description: A programsémához tartozó összes utazási mód ID-je.
              items:
                type: object
                required:
                  - travelModeId
                properties:
                  travelModeId:
                    description: A programsémához tartozó egy utazási mód ID-je.
                    example: 25
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  travelModeRefId:
                    description: |
                      A programsémához tartozó programtípusra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/base/basicData/25"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
            arrayOfAccomodationIds:
              type: array
              minItems: 1
              description: A programsémához tartozó szállások ID listája
              items:
                type: object
                required:
                  - accomodationId
                properties:
                  accomodationId:
                    description: A programsémához tartozó egy szállás ID-je.
                    example: 2235
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  accomodationRefId:
                    description: |
                      A programsémához tartozó szállásra mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                    example: "/data/locations/accomodation/2235"
                    oneOf:
                      - $ref: "#/components/schemas/refId"

    programPrices:
      description: |
        __UTAZÁSI PROGRAM ÁRAK__  

        Egy programsémához tartozó árlista.  

        __Célja:__ Egy programsémához tartozó, - az API kérés pillanatában - foglalható szobák és kapacitások árainak reprezentálása. 

        __Hívás útvonal:__ /data/program/{programId}/prices/
      type: object
      required:
        - id
        - arrayOfDatesAndPrices
        - arrayOfAdditionalItems
      properties:
        id:
          description: Az árlista azonosító Id-ja, amely megegyezik a progrmaséma Id-jával.
          example: 940
          oneOf:
            - $ref: "#/components/schemas/id"
        self:
          description: A programséma árlistájára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
          example: /data/program/940/prices/
          oneOf:
            - $ref: "#/components/schemas/refId"
        arrayOfDatesAndPrices:
          type: array
          items:
            description:
              Egy szálláshoz tartozó, dátum-úthossz-szoba-kapacitás árainak reprezentálása.
              A felárak (közte az ellátások áraival) egy segédtömbben vannak (arrayOfAdditionalItems).
            type: object
            required:
              - departuresHead
              - isBestPriceOfDate
              - arrayOfAdditionalItemIds
              - arrayOfCateringIds
              - capacityVector
              - roomNameId
              - fullPrice
              - discount
            properties:
              departuresHead:
                $ref: "#/components/schemas/departuresHead"
              isBestPriceOfDate:
                type: boolean
                example: true
                description: "Az adott dátum és úthossz legjobb fejenkénti ára vagy sem"
              arrayOfAdditionalItemIds:
                type: array
                minItems: 1
                description: |
                  Az adott indulási dátum és úthossz párhoz tartozó felárak listája.  
                  A lista 'arrayOfAdditionalItems' tömb, az ID a tömb indexe
                example: [342, 343, 344, 254, 616, 786]
                items:
                  oneOf:
                    - $ref: "#/components/schemas/id"
              arrayOfAdditionalItemRefIds:
                type: array
                minItems: 1
                description: A felárakra mutató hívás. A programsémára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example:
                  [
                    "/data/baseDatas/basicData/342",
                    "/data/baseDatas/basicData/3343",
                    "/data/baseDatas/basicData/3344",
                    "/data/baseDatas/basicData/3254",
                    "/data/baseDatas/basicData/3616",
                    "/data/baseDatas/basicData/3786",
                  ]
                items:
                  oneOf:
                    - $ref: "#/components/schemas/refId"
              arrayOfCateringIds:
                type: array
                description: |
                  Az adott indulási dátum és úthossz párhoz tartozó ellátások ID-jei
                minItems: 1
                example: [879, 414]
                items:
                  oneOf:
                    - $ref: "#/components/schemas/id"
              arrayOfCateringRefIds:
                type: array
                minItems: 1
                description: Az ellátásokra mutató hívás. A programsémára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example:
                  [
                    "/data/baseDatas/basicData/879",
                    "/data/baseDatas/basicData/414",
                  ]
                items:
                  oneOf:
                    - $ref: "#/components/schemas/refId"
              capacityVector:
                type: object
                required:
                  - adultsOnMainBed
                  - adultsOnExtraBed
                  - childOnExtraBed
                  - childAges
                description: |
                  Az adott árhoz tartozó szobának a kapacitása.
                example:
                  {
                    adultsOnMainBed: 1,
                    adultsOnExtraBed: 0,
                    childOnExtraBed: 0,
                  }
                properties:
                  adultsOnMainBed:
                    type: integer
                    description: Felnőttek száma főágyon
                    format: int32
                    minimum: 1
                  adultsOnExtraBed:
                    type: integer
                    description: Felnőttek száma pótágyon
                    format: int32
                    minimum: 0
                  childOnExtraBed:
                    type: integer
                    description: Gyerek száma pótágyon
                    format: int32
                    minimum: 0
                  childAges:
                    type: array
                    description: |
                      A pótágyon lévő gyerek minimum és maximum életkor párja.
                      pl.: [[2,12],[2,12]] jelentése:
                      * 1. gyerek 2-12 éves korig számít gyereknek
                      * 2. gyerek 2-12 éves korig számít gyereknek
                      [[2,12],[2,6]] jelentése:
                      * 1. gyerek 2-12 éves korig számít gyereknek
                      * 2. gyerek 2-6 éves korig számít gyereknek
                    example: [[2, 12], [2, 12]]
                    items:
                      type: array
                      example: [2, 12]
                      items:
                        type: integer
                        format: int32
                        minimum: 2
                        maximum: 18
              roomNameId:
                description: A szoba nevének törzsadat ID-je.
                example: 2385
                oneOf:
                  - $ref: "#/components/schemas/id"
              roomNameRefId:
                description: A szoba nevére mutató hívás. A programsémára mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example: "/data/base/tag/2385"
                oneOf:
                  - $ref: "#/components/schemas/refId"
              fullPrice:
                type: integer
                description: Az adott időpont-úthossz páron lévő, minden utazót és kötelező felárat tartalmazó, kedvezmény nélküli ár
                example: 349990
                format: int64
                minimum: 0
              discount:
                type: object
                nullable: true
                required:
                  - id
                  - discountedPrice
                  - typeId
                  - validUntil
                properties:
                  id:
                    description: "Referencia ID, az admin rendszerben lévő ID-vel megegyezik"
                    oneOf:
                      - $ref: "#/components/schemas/id"
                    example: 4519
                  discountedPrice:
                    type: integer
                    description: Az adott időpont-úthossz páron lévő, kötelező felárat tartalmazó, kedvezményes ár
                    format: int64
                    minimum: 0
                    example: 329490
                  typeId:
                    description: Az akció típus (firstminute, lastminute, akció) törzsadatokban lévő ID-ja.
                    example: 943
                    oneOf:
                      - $ref: "#/components/schemas/id"
                  typeRefId:
                    description: Az akció típus (firstminute, lastminute, akció) törzsadatokban lévő ID-ja.
                    example: "/data/base/basicDatas/943"
                    oneOf:
                      - $ref: "#/components/schemas/refId"
                  validUntil:
                    nullable: true
                    description: |
                      Az akció érvényességének végét jelző ISO 8601 formátumú időbélyegző.  
                      pl.: 2023-07-10 => magyar idő szerint 2023-07-10 23:59:59 után a kedvezményes ár már nem használható, helyette (a következő frissítésig) a 'fullPrice' ár használandó.  
                      Amennyiben nincs az akciónak lejárata, az érték null
                    example: "2023-07-10"
                    oneOf:
                      - $ref: "#/components/schemas/timestamp"
        arrayOfAdditionalItems:
          type: array
          description: Programsémához tartozó összes felár listája
          items:
            type: object
            required:
              - id
              - title
              - isMandantory
              - isCountInStorno
              - isDivisible
              - unitId
              - alternativeText
              - groupId
              - arrayOfCateringFilterIds
              - prices
            properties:
              id:
                description: A felár azonosító Id-ja.
                example: 1940
                oneOf:
                  - $ref: "#/components/schemas/id"
              title:
                description: A felár megjelenítésre alkalmas elnevezése.
                example: "Repülőtéri illeték"
                oneOf:
                  - $ref: "#/components/schemas/title"
              isMandantory:
                type: boolean
                description: A felár kötelezően hozzászámolandó a részvételi díjhoz vagy sem?
              isCountInStorno:
                type: boolean
                description: A felár bele számolandó a sztornószámítás alapjába vagy sem?
              isDivisible:
                type: boolean
                description: A felár egységeinek a száma módosítható vagy fix?
              unitId:
                description: |
                  A felár egyégének (pl.: /fő/nap, /fő) törzsadat ID-je.
                example: 22
                oneOf:
                  - $ref: "#/components/schemas/id"
              unitRefId:
                description: A felár egységére mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example: "/data/base/tag/22"
                oneOf:
                  - $ref: "#/components/schemas/refId"
              alternativeText:
                type: integer
                description: |
                  Egy tétel árának szöveges megjelenítése.
                  pl.: egy tételt ajándékba szeretnénk adni, de a sztornó számításnál bele szeretnénk számolni a sztornóalapba. Ez a tulajdonság a tétel ára helyettt jelenik meg.
                format: int32
                minimum: 0
                maximum: 65535
              groupId:
                description: |
                  Címke a felár csoportosításához (pl.: BBP)
                  A felár cimke tulajdonságának törzsadat ID-je
                example: 940
                oneOf:
                  - $ref: "#/components/schemas/id"
              groupRefId:
                description: A cimkére mutató API hívás. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example: /data/base/tag/940/
                oneOf:
                  - $ref: "#/components/schemas/refId"
              arrayOfCateringFilterIds:
                type: array
                description: |
                  A felár melyik ellátások esetén érvényes. 
                  Az ellátás törzsadat ID-je
                example: [620, 488, 233]
                nullable: true
                items:
                  oneOf:
                    - $ref: "#/components/schemas/id"
              arrayOfCateringFilterRefIds:
                description: Az ellátásokra mutató API hívások. Csak akkor kerül bele a válaszba, ha az API hívás {withRefPath} paraméterrel érkezik. A {withRefPath} értéke elhagyható.
                example:
                  [
                    "/data/base/basicData/620",
                    "/data/base/basicData/488",
                    "/data/base/basicData/233",
                  ]
                items:
                  oneOf:
                    - $ref: "#/components/schemas/refId"
              prices:
                description: A felár árát leíró objektum, felőtt és gyerek esetén.
                type: object
                required:
                  - adult
                  - children
                properties:
                  adult:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 349990
                    description: Az adott felár felnőtt ára
                    nullable: false
                  children:
                    type: integer
                    format: int64
                    minimum: 0
                    example: 349990
                    description: Az adott felár gyerek ára
                    nullable: false
